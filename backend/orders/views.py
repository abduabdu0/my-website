# Create your views here.
from django.shortcuts import render
from django.http import JsonResponse
from django.views.decorators.csrf import csrf_exempt
import requests
import json
import logging

logger = logging.getLogger(__name__)

# üîß Telegram configuration
TELEGRAM_TOKEN = "7761119013:AAH6657V3j6peZwLZA41bGLsqrRNX8v03pE"
CHAT_ID = "5085102551"

def home(request):
    return render(request, 'contact.html')

@csrf_exempt
def send_order(request):
    if request.method == "POST":
        try:
            # –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            logger.info(f"–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ POST: {dict(request.POST)}")
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã
            name = request.POST.get("firstname", "")
            lastname = request.POST.get("lastname", "")
            city = request.POST.get("city", "")
            phone = request.POST.get("phone", "")
            message = request.POST.get("subject", "")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
            if not all([name, phone]):
                logger.error("–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è")
                return JsonResponse({"error": "–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è"}, status=400)

            text = (
                f"üì© –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ —Å —Å–∞–π—Ç–∞:\n\n"
                f"üë§ –ò–º—è: {name} {lastname}\n"
                f"üèôÔ∏è –ì–æ—Ä–æ–¥: {city}\n"
                f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {phone}\n"
                f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: {message}"
            )

            # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram
            url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
            response = requests.post(url, 
                                  data={
                                      "chat_id": CHAT_ID,
                                      "text": text,
                                      "parse_mode": "HTML"
                                  },
                                  timeout=10)  # timeout –≤ 10 —Å–µ–∫—É–Ω–¥
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç –æ—Ç Telegram
            response.raise_for_status()
            response_data = response.json()
            
            if response_data.get('ok'):
                logger.info("–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram")
                return JsonResponse({"status": "success"})
            else:
                logger.error(f"–û—à–∏–±–∫–∞ Telegram API: {response_data}")
                return JsonResponse({"error": "–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram"}, status=500)

        except requests.RequestException as e:
            logger.error(f"–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram: {str(e)}")
            return JsonResponse({"error": "–û—à–∏–±–∫–∞ —Å–µ—Ç–∏"}, status=500)
        
        except Exception as e:
            logger.error(f"–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
            return JsonResponse({"error": "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞"}, status=500)

    return JsonResponse({"error": "–ú–µ—Ç–æ–¥ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è"}, status=405)


def portfolio(request):
    return render(request, 'portfolio.html')
